# Make this yaml!


export NR_PYTHON="$HOME/non-redundant-pipeline/anaconda3_herasim/bin/python"
export NR_CATALOG="catall.txt"    # A sub-directory in NR_OUTPUT_ROOT will be created for this catalog
export NR_WHICH="points"
export NR_CASES="yaml_files/generate_sims_4b_0.01.yaml" # yaml files corresponding to cases 
export NR_MPI_NP=1                # Number of processes for MPI running generate_sims
export NR_NP=32                   # Number of processes for multiprocessing running analyse_sims
export NR_AZ_ZA_CORRECTIONS="astropy"
export NR_APPLY_NOISE="True"      # True or False, as for all boolean options.
export NR_APPLY_GAINS="True"
export NR_NSIDE=32                # For healvis
export NR_NUM_TIMES=2
export NR_NUM_FREQS=2
export NR_MEM="100GB"
export NR_CAL_AS_HICKLE="False"
export NR_SIM_TIME_POINTS="11:00:00"
export NR_SIM_TIME_DIFFUSE="14:00:00"
export NR_HEX_SPEC=""
export NR_DIFFUSE_MODEL=GSM	      	# EOR or GSM for healvis
export NR_OUTPUT_ROOT="/scratch/users/hgarsden"        # All the output goes here
export NR_CLEAN_OUTPUT="True"     	# Remove all previous output for this NR_CATALOG and this NR_WHICH (including all cases)
export NR_DUMMY_SOURCE="False"		# Needed to generate uvh5 for subsequent replacing with EOR in diffuse sim

echo NR_PYTHON $NR_PYTHON
echo NR_CATALOG $NR_CATALOG
echo NR_WHICH $NR_WHICH
echo NR_CASES $NR_CASES
echo NR_MPI_NP $NR_MPI_NP
echo NR_NP $NR_NP
echo NR_AZ_ZA_CORRECTIONS $NR_AZ_ZA_CORRECTIONS
echo NR_APPLY_NOISE $NR_APPLY_NOISE
echo NR_APPLY_GAINS $NR_APPLY_GAINS
echo NR_NSIDE $NR_NSIDE
echo NR_NUM_TIMES $NR_NUM_TIMES
echo NR_NUM_FREQS $NR_NUM_FREQS
echo NR_MEM $NR_MEM
echo NR_CAL_AS_HICKLE $NR_CAL_AS_HICKLE
echo NR_SIM_TIME_POINTS $NR_TIME_POINTS
echo NR_SIM_TIME_DIFFUSE $NR_TIME_DIFFUSE
echo NR_HEX_SPEC $NR_HEX_SPEC
echo NR_DIFFUSE_MODEL $NR_DIFFUSE_MODEL
echo NR_OUTPUT_ROOT $NR_OUTPUT_ROOT
echo NR_CLEAN_OUTPUT $NR_CLEAN_OUTPUT
echo NR_DUMMY_SOURCE $NR_DUMMY_SOURCE
